version: "3.8"

services:
  openfgadb:
    image: postgres:14
    container_name: openfgadb
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - openfgadb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    depends_on:
      openfgadb:
        condition: service_healthy
    image: openfga/openfga:latest
    container_name: migrate
    command: migrate
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@openfgadb:5432/postgres?sslmode=disable

  openfga:
    depends_on:
      migrate:
        condition: service_completed_successfully
    image: openfga/openfga:latest
    container_name: openfga
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@openfgadb:5432/postgres?sslmode=disable
      - OPENFGA_LOG_FORMAT=json
    command: run
    ports:
      # Needed for the http server
      - "8080:8080"
      # Needed for the grpc server (if used)
      - "8081:8081"
      # Needed for the playground (Do not enable in prod!)
      - "3000:3000"

  openfga-cli:
    build: 
      context: openfga-cli
      dockerfile: Dockerfile
    container_name: openfga-cli
    volumes:
      - ./:/home/app
    command: python3
    tty: true
    stdin_open: true
    user: 1000:1000
    environment:
      - FGA_API_URL=http://openfga:8080

  transformer:
    build: 
      context: transformer
      dockerfile: Dockerfile
    container_name: transformer
    volumes:
      - ./transformer/source:/home/node
    command: node
    tty: true
    stdin_open: true
    user: 1000:1000

volumes:
  openfgadb: